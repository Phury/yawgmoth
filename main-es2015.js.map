{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app.routing.ts","./src/app/components/card-pill/card-pill.component.ts","./src/app/components/card-pill/card-pill.component.html","./src/app/components/card-table/card-table.component.ts","./src/app/components/card-table/card-table.component.html","./src/app/components/card-tile/card-tile.component.ts","./src/app/components/card-tile/card-tile.component.html","./src/app/components/deck-card/deck-card.component.ts","./src/app/components/deck-card/deck-card.component.html","./src/app/components/deck-tile/deck-tile.component.ts","./src/app/components/deck-tile/deck-tile.component.html","./src/app/components/deck/deck.component.ts","./src/app/components/deck/deck.component.html","./src/app/components/keyrune/keyrune.component.ts","./src/app/components/keyrune/keyrune.component.html","./src/app/components/mana/mana.component.ts","./src/app/components/mana/mana.component.html","./src/app/components/spinner-card/spinner-card.component.ts","./src/app/components/spinner-card/spinner-card.component.html","./src/app/core/dropdown/dropdown.component.ts","./src/app/core/dropdown/dropdown.component.html","./src/app/core/toggle/toggle.component.ts","./src/app/core/toggle/toggle.component.html","./src/app/env.ts","./src/app/layouts/default-layout/default-layout.component.ts","./src/app/layouts/default-layout/default-layout.component.html","./src/app/layouts/navigation/navigation.component.ts","./src/app/layouts/navigation/navigation.component.html","./src/app/layouts/pull-out-menu/pull-out-menu.component.ts","./src/app/layouts/pull-out-menu/pull-out-menu.component.html","./src/app/model/card.ts","./src/app/pages/collection/collection.component.ts","./src/app/pages/collection/collection.component.html","./src/app/pages/compare/compare.component.ts","./src/app/pages/compare/compare.component.html","./src/app/pages/deck-list/deck-list.component.ts","./src/app/pages/deck-list/deck-list.component.html","./src/app/pages/import/import.component.ts","./src/app/pages/import/import.component.html","./src/app/pages/meta-list/meta-list.component.ts","./src/app/pages/meta-list/meta-list.component.html","./src/app/pages/settings/settings.component.ts","./src/app/pages/settings/settings.component.html","./src/app/pages/wish-list/wish-list.component.ts","./src/app/pages/wish-list/wish-list.component.html","./src/app/services/collection.service.ts","./src/app/services/compare.service.ts","./src/app/services/csv.service.ts","./src/app/services/deck.service.ts","./src/app/services/logger.service.ts","./src/app/services/mtg.service.ts","./src/app/services/settings.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\r\nimport { LightboxConfig } from 'ngx-lightbox';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'yawgmoth';\r\n\r\n  constructor(private lightboxConfig: LightboxConfig) {\r\n    // override default config\r\n    lightboxConfig.fadeDuration = 0;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n}\r\n","<router-outlet></router-outlet>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { LightboxModule } from 'ngx-lightbox';\r\nimport { AppComponent } from './app.component';\r\nimport { DefaultLayoutComponent } from './layouts/default-layout/default-layout.component';\r\nimport { NavigationComponent } from './layouts/navigation/navigation.component';\r\nimport { DeckListComponent } from './pages/deck-list/deck-list.component';\r\nimport { CollectionComponent } from './pages/collection/collection.component';\r\nimport { WishListComponent } from './pages/wish-list/wish-list.component';\r\nimport { MetaListComponent } from './pages/meta-list/meta-list.component';\r\nimport { SpinnerCardComponent } from './components/spinner-card/spinner-card.component';\r\nimport { ManaComponent } from './components/mana/mana.component';\r\nimport { DeckComponent } from './components/deck/deck.component';\r\nimport { DeckCardComponent } from './components/deck-card/deck-card.component';\r\nimport { KeyruneComponent } from './components/keyrune/keyrune.component';\r\nimport { DeckTileComponent } from './components/deck-tile/deck-tile.component';\r\nimport { CardTileComponent } from './components/card-tile/card-tile.component';\r\nimport { ToggleComponent } from './core/toggle/toggle.component';\r\nimport { CompareComponent } from './pages/compare/compare.component';\r\nimport { DropdownComponent } from './core/dropdown/dropdown.component';\r\nimport { appRouting } from './app.routing';\r\nimport { CardTableComponent } from './components/card-table/card-table.component';\r\nimport { SettingsComponent } from './pages/settings/settings.component';\r\nimport { PullOutMenuComponent } from './layouts/pull-out-menu/pull-out-menu.component';\r\nimport { ImportComponent } from './pages/import/import.component';\r\nimport { CardPillComponent } from './components/card-pill/card-pill.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    DeckComponent,\r\n    SpinnerCardComponent,\r\n    ManaComponent,\r\n    DeckListComponent,\r\n    CollectionComponent,\r\n    DefaultLayoutComponent,\r\n    DeckCardComponent,\r\n    NavigationComponent,\r\n    KeyruneComponent,\r\n    DeckTileComponent,\r\n    CardTileComponent,\r\n    WishListComponent,\r\n    MetaListComponent,\r\n    ToggleComponent,\r\n    CompareComponent,\r\n    DropdownComponent,\r\n    CardTableComponent,\r\n    SettingsComponent,\r\n    PullOutMenuComponent,\r\n    ImportComponent,\r\n    CardPillComponent,\r\n  ],\r\n  imports: [\r\n    RouterModule.forRoot(appRouting), //, { enableTracing: true }),\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    LightboxModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Routes } from '@angular/router';\r\nimport { DefaultLayoutComponent } from './layouts/default-layout/default-layout.component';\r\nimport { DeckListComponent } from './pages/deck-list/deck-list.component';\r\nimport { DeckComponent } from './components/deck/deck.component';\r\nimport { CollectionComponent } from './pages/collection/collection.component';\r\nimport { WishListComponent } from './pages/wish-list/wish-list.component';\r\nimport { MetaListComponent } from './pages/meta-list/meta-list.component';\r\nimport { CompareComponent } from './pages/compare/compare.component';\r\nimport { SettingsComponent } from './pages/settings/settings.component';\r\nimport { ImportComponent } from './pages/import/import.component';\r\n\r\nexport const appRouting: Routes = [\r\n  // { path: 'decks/:id',      component: HeroDetailComponent },\r\n  {\r\n    path: 'decks',\r\n    component: DefaultLayoutComponent,\r\n    data: { title: 'Your decks' },\r\n    children: [\r\n      { path: '', component: DeckListComponent },\r\n    ]\r\n  },\r\n  {\r\n    path: 'decks/:id',\r\n    component: DefaultLayoutComponent,\r\n    data: { title: 'Deck details' },\r\n    children: [\r\n    { path: '', component: DeckComponent },\r\n    ]\r\n  },\r\n  {\r\n    path: 'collection',\r\n    component: DefaultLayoutComponent,\r\n    data: { title: 'Your cards' },\r\n    children: [\r\n      { path: '', component: CollectionComponent },\r\n    ]\r\n  },\r\n  {\r\n    path: 'wishlist',\r\n    component: DefaultLayoutComponent,\r\n    data: { title: 'Your wishlist' },\r\n    children: [\r\n      { path: '', component: WishListComponent },\r\n    ]\r\n  },\r\n  {\r\n    path: 'import',\r\n    component: DefaultLayoutComponent,\r\n    data: { title: 'Import decks' },\r\n    children: [\r\n      { path: '', component: ImportComponent },\r\n    ]\r\n  },\r\n  {\r\n    path: 'settings',\r\n    component: DefaultLayoutComponent,\r\n    data: { title: 'User settings' },\r\n    children: [\r\n      { path: '', component: SettingsComponent },\r\n    ]\r\n  },\r\n  {\r\n    path: 'meta',\r\n    component: DefaultLayoutComponent,\r\n    data: { title: 'Mtg metagame' },\r\n    children: [\r\n      { path: '', component: MetaListComponent },\r\n    ]\r\n  },\r\n  {\r\n    path: 'compare/:id',\r\n    component: DefaultLayoutComponent,\r\n    data: { title: 'Compare decks' },\r\n    children: [\r\n      { path: '', component: CompareComponent },\r\n    ]\r\n  },\r\n  {path: 'compare', redirectTo: 'compare/', pathMatch: 'full'},\r\n  {\r\n    path: '',\r\n    redirectTo: '/decks',\r\n    pathMatch: 'full'\r\n  },\r\n  //{ path: '**', component: PageNotFoundComponent }\r\n];","import { Component, OnInit, Input } from '@angular/core';\nimport { Card } from 'src/app/model/card';\nimport { Lightbox } from 'ngx-lightbox';\n\n@Component({\n  selector: 'ygm-card-pill',\n  templateUrl: './card-pill.component.html',\n  styleUrls: ['./card-pill.component.css']\n})\nexport class CardPillComponent implements OnInit {\n  @Input() card: Card;\n\n  constructor(private lightbox: Lightbox) { }\n\n  ngOnInit(): void {\n  }\n\n  open() {\n    if (this.card.layout === 'normal') {\n      this.lightbox.open([{\n        src: this.card.imgUrl,\n        caption: this.card.name,\n        thumb: this.card.name,\n      }]);\n    } else {\n      this.lightbox.open([{\n        src: this.card.faces[0].imgUrl,\n        caption: this.card.name,\n        thumb: this.card.name,\n      }]);\n    }\n  }\n\n}\n","<ng-container [ngSwitch]=\"card.layout\">\n    <i class=\"icon icon-photo\" (click)=\"open()\"></i>\n    <ng-container *ngSwitchDefault> \n        {{card.amount}}\n        {{card.faces[0].name}}\n        <ygm-mana [cost]=\"card.faces[0].manaCost\"></ygm-mana>\n    </ng-container>\n    <ng-container *ngSwitchCase=\"'normal'\">\n        {{card.amount}}\n        {{card.name}}\n        <ygm-mana [cost]=\"card.manaCost\"></ygm-mana>\n    </ng-container>\n</ng-container>\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Observable, Subject, combineLatest } from 'rxjs';\r\nimport { Collectible } from 'src/app/model/collectible';\r\nimport { debounceTime, distinctUntilChanged, startWith, map } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'ygm-card-table',\r\n  templateUrl: './card-table.component.html',\r\n})\r\nexport class CardTableComponent implements OnInit {\r\n\r\n  @Input() searchable: boolean = true;\r\n  @Input() cards$: Observable<Collectible[]>;\r\n  searchFilter: string;\r\n  searchFilter$ = new Subject<string>();\r\n  filterdCards$: Observable<Collectible[]>;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    this.searchFilter$.pipe(\r\n      debounceTime(400),\r\n      distinctUntilChanged(),\r\n    );\r\n    this.filterdCards$ = combineLatest([\r\n      this.cards$,\r\n      this.searchFilter$.pipe(startWith('')),\r\n    ]).pipe(\r\n      map(([elements, search]) => elements.filter(state => state.cardName.toLowerCase().startsWith(search.toLowerCase()))),\r\n    );\r\n  }\r\n\r\n}\r\n","<div class=\"collection-search-view\" *ngIf=\"searchable\">\r\n\t<form>\r\n\t\t<div class=\"has-icon-right\">\r\n\t\t\t<input type=\"text\" class=\"form-input\" placeholder=\"search\" name=\"searchFilter\"\r\n                [(ngModel)]=\"searchFilter\" \r\n                (keyup.enter)=\"searchFilter$.next($event.target.value)\" />\r\n\t\t\t<i class=\"form-icon icon icon-search\"></i>\r\n\t\t</div>\r\n\t</form>\r\n</div>\r\n<div class=\"columns collection-view\">\r\n\t<table class=\"table table-striped table-hover\">\r\n\t\t<thead>\r\n\t\t\t<tr>\r\n\t\t\t\t<th></th>\r\n\t\t\t\t<th>cardname</th>\r\n\t\t\t\t<th>set</th>\r\n\t\t\t\t<th>set num</th>\r\n\t\t\t\t<th>price</th>\r\n\t\t\t\t<th>quantity</th>\r\n\t\t\t</tr>\r\n\t\t</thead>\r\n\t\t<tbody>\r\n\t\t\t<tr *ngFor=\"let item of (filterdCards$ | async)\" >\r\n\t\t\t\t<td><i class=\"icon icon-photo\"></i></td>\r\n\t\t\t\t<td>{{item.cardName}}</td>\r\n\t\t\t\t<td><ygm-keyrune [symbol]=\"item.set\"></ygm-keyrune></td>\r\n\t\t\t\t<td>{{item.setNumber}}</td>\r\n\t\t\t\t<td>{{item.price}}</td>\r\n\t\t\t\t<td>{{item.quantity}}</td>\r\n\t\t\t</tr>\r\n\t\t</tbody>\r\n\t</table>\r\n</div>","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Card } from 'src/app/model/card';\r\n\r\n@Component({\r\n  selector: 'ygm-card-tile',\r\n  templateUrl: './card-tile.component.html',\r\n  styleUrls: ['./card-tile.component.css']\r\n})\r\nexport class CardTileComponent implements OnInit {\r\n  @Input() card: Card;\r\n  showFace = 'front';\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  toggle() {\r\n    this.showFace = (this.showFace === 'front' ? 'back' : 'front');\r\n  }\r\n}\r\n","<div class=\"container card-tile-view\">\r\n\t<div class=\"tile\">\r\n\t\t\r\n\t\t<ng-container [ngSwitch]=\"card.layout\">\r\n\t\t\t<!-- adventure/split as default layout because ngSwitchCase is limited to 1 value match -->\r\n\t\t\t<ng-container *ngSwitchDefault> \r\n\t\t\t\t<div class=\"tile-icon transform\">\r\n\t\t\t\t\t<img class=\"mtg-card\" src=\"{{card.imgUrl}}\" [ngClass]=\"showFace == 'front' ? '' : 'rotate'\" />\r\n\t\t\t\t\t<div class=\"text-center actions\" *ngIf=\"card.layout === 'split'\">\r\n\t\t\t\t\t\t<button class=\"btn btn-sm\" (click)=\"toggle()\">rotate</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"tile-content\">\r\n\t\t\t\t\t<div *ngFor=\"let face of card.faces\">\r\n\t\t\t\t\t\t<p class=\"tile-title\">{{face.name}}&nbsp;<ygm-mana [cost]=\"face.manaCost\"></ygm-mana></p>\r\n\t\t\t\t\t\t<p class=\"tile-subtitle\">{{face.typeLine}}</p>\r\n\t\t\t\t\t\t<p *ngIf=\"face.oracleText\" class=\"card-oracle\">{{face.oracleText}}</p>\r\n\t\t\t\t\t\t<p *ngIf=\"face.flavorText\" class=\"card-flavor\">{{face.flavorText}}</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</ng-container>\r\n\r\n\t\t\t<ng-container *ngSwitchCase=\"'normal'\">\r\n\t\t\t\t<div class=\"tile-icon\">\r\n\t\t\t\t\t<img class=\"mtg-card\" src=\"{{card.imgUrl}}\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"tile-content\">\r\n\t\t\t\t\t<p class=\"tile-subtitle\">{{card.typeLine}}</p>\r\n\t\t\t\t\t<p *ngIf=\"card.oracleText\" class=\"card-oracle\">{{card.oracleText}}</p>\r\n\t\t\t\t\t<p *ngIf=\"card.flavorText\" class=\"card-flavor\">{{card.flavorText}}</p>\r\n\t\t\t\t</div>\r\n\t\t\t</ng-container>\r\n\r\n\t\t\t<ng-container *ngSwitchCase=\"'transform'\">\r\n\t\t\t\t<div class=\"tile-icon transform\">\r\n\t\t\t\t\t<img class=\"mtg-card back\" src=\"{{card.faces[1].imgUrl}}\" [ngClass]=\"showFace == 'front' ? '' : 'visible'\" />\r\n\t\t\t\t\t<img class=\"mtg-card front\" src=\"{{card.faces[0].imgUrl}}\" [ngClass]=\"showFace == 'front' ? 'visible' : ''\" />\r\n\t\t\t\t\t<div class=\"text-center actions\">\r\n\t\t\t\t\t\t<button class=\"btn btn-sm\" (click)=\"toggle()\">transform</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"tile-content\">\r\n\t\t\t\t\t<div *ngFor=\"let face of card.faces\">\r\n\t\t\t\t\t\t<p class=\"tile-title\">{{face.name}}&nbsp;<ygm-mana [cost]=\"face.manaCost\"></ygm-mana></p>\r\n\t\t\t\t\t\t<p class=\"tile-subtitle\">{{face.typeLine}}</p>\r\n\t\t\t\t\t\t<p *ngIf=\"face.oracleText\" class=\"card-oracle\">{{face.oracleText}}</p>\r\n\t\t\t\t\t\t<p *ngIf=\"face.flavorText\" class=\"card-flavor\">{{face.flavorText}}</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</ng-container>\r\n\t\t</ng-container>\r\n\r\n\t</div>\r\n</div>\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport * as env from '../../env';\r\nimport { Deck, DeckMeta } from '../../model/deck';\r\nimport { Card } from '../../model/card';\r\nimport { MtgService } from '../../services/mtg.service';\r\n\r\n@Component({\r\n  selector: 'ygm-deck-card',\r\n  templateUrl: './deck-card.component.html',\r\n})\r\nexport class DeckCardComponent implements OnInit {\r\n  @Input() meta: DeckMeta;\r\n  previewCard$: Observable<Card>;\r\n\r\n  constructor(private mtgService: MtgService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.previewCard$ = this.mtgService.getCardByName(this.meta.previewCard);\r\n  }\r\n\r\n}\r\n","<div class=\"card\" *ngIf=\"(previewCard$ | async) as card\">\r\n  <div class=\"card-image\">\r\n    <img src=\"{{card.imgArtUrl}}\" class=\"img-responsive\" />\r\n  </div>\r\n  <div class=\"card-header\">\r\n    <div class=\"card-subtitle\">\r\n      <a [routerLink]=\"['/decks', meta.id]\" [state]=\"meta\" class=\"btn btn-success\">{{meta.name}}</a>\r\n    </div>\r\n    <div class=\"card-action\">\r\n      <span class=\"chip\">{{meta.format}}</span>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { DeckMeta } from 'src/app/model/deck';\r\nimport { Observable } from 'rxjs';\r\nimport { Card } from 'src/app/model/card';\r\nimport { MtgService } from 'src/app/services/mtg.service';\r\n\r\n@Component({\r\n  selector: 'ygm-deck-tile',\r\n  templateUrl: './deck-tile.component.html',\r\n  styleUrls: ['./deck-tile.component.css']\r\n})\r\nexport class DeckTileComponent implements OnInit {\r\n  @Input() meta: DeckMeta;\r\n  previewCard$: Observable<Card>;\r\n\r\n  constructor(private mtgService: MtgService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.previewCard$ = this.mtgService.getCardByName(this.meta.previewCard);\r\n  }\r\n\r\n}\r\n","<div class=\"tile\" *ngIf=\"(previewCard$ | async) as card\">\r\n  <div class=\"tile-icon\">\r\n\t<figure class=\"deck-icon\">\r\n\t    <img src=\"{{card.imgArtUrl}}\" />\r\n\t</figure>\r\n  </div>\r\n  <div class=\"tile-content\">\r\n\t<h5>\r\n\t\t<a [routerLink]=\"['/decks', meta.id]\" [state]=\"meta\">{{meta.name}}</a>\r\n\t</h5>\r\n\t<br/>\r\n    <span class=\"chip\">{{meta.format}}</span>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { map, flatMap, tap, filter } from 'rxjs/operators';\r\nimport { Deck, DeckMeta } from '../../model/deck';\r\nimport { Card } from '../../model/card';\r\nimport { DeckService } from '../../services/deck.service';\r\nimport { LoggerService } from 'src/app/services/logger.service';\r\nimport { KeyValue } from '@angular/common';\r\n\r\nconst CARD_TYPE_GROUPES = ['creature', 'planeswalker', 'instant', 'sorcery', 'artifact', 'enchantment', 'land'];\r\n\r\n@Component({\r\n  selector: 'ygm-deck',\r\n  templateUrl: './deck.component.html',\r\n})\r\nexport class DeckComponent implements OnInit {\r\n  meta$: Observable<DeckMeta>;\r\n  mainboardGrouped$: Observable<Map<string, Card[]>>;\r\n  sideboard$: Observable<Card[]>;\r\n\r\n  constructor(\r\n    private log: LoggerService,\r\n    private route: ActivatedRoute,\r\n    private deckService: DeckService) { }\r\n\r\n  ngOnInit(): void {\r\n    /*\r\n    TODO: get meta from state first\r\n    this.meta$ = this.route.paramMap.pipe(\r\n      map(() => window.history.state),\r\n      catchError(error => {\r\n        const deckId = this.route.parent.snapshot.url[1].path;\r\n        return this.deckService.getOne(deckId);\r\n      })\r\n    );\r\n    */\r\n    const deckId = this.route.parent.snapshot.url[1].path;\r\n    this.meta$ = this.deckService.findMetadataById(deckId);\r\n    const deck$ = this.meta$.pipe(\r\n      flatMap(meta => this.deckService.getDeckById(meta.id)),\r\n      // tap(deck => deck.cards.forEach(card => card.showDetails$ = new Subject<boolean>())),\r\n    );\r\n    this.mainboardGrouped$ = deck$.pipe(\r\n      map(deck => deck.cards.reduce((acc, card) => {\r\n        if (card.sideboard) {\r\n          // skip\r\n        } else if (acc.has(card.types[0])) {\r\n          acc.get(card.types[0]).push(card);\r\n        } else {\r\n          acc.set(card.types[0], [card]);\r\n        }\r\n        return acc;\r\n      }, this.cardMap()))\r\n    );\r\n    this.sideboard$ = deck$.pipe(\r\n      map(deck => deck.cards.filter(c => c.sideboard)),\r\n      // tap(cards => this.log.debug(cards, this)),\r\n    );\r\n  }\r\n\r\n  private cardMap(): Map<string, Card[]> {\r\n    return new Map<string, Card[]>();\r\n  }\r\n\r\n  groupingOrder = (a: KeyValue<string, Card[]>, b: KeyValue<string, Card[]>): number => {\r\n    const indexOfA = CARD_TYPE_GROUPES.indexOf(a.key);\r\n    const indexOfB = CARD_TYPE_GROUPES.indexOf(b.key);\r\n    return indexOfB > indexOfA ? -1 : (indexOfA > indexOfB ? 1 : 0);\r\n  }\r\n\r\n}\r\n","<div *ngIf=\"(meta$ | async) as meta\">\r\n\r\n  <div class=\"float-right\">\r\n    <div class=\"dropdown dropdown-right\">\r\n      <a class=\"btn dropdown-toggle\" tabindex=\"0\">actions <i class=\"icon icon-caret\"></i></a>\r\n      <ul class=\"menu text-left\">\r\n        <li class=\"menu-item\">\r\n          <a [routerLink]=\"['/compare', meta.id]\">compare</a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n  <h3>{{meta.name}}</h3>\r\n  <div class=\"clearfix\"></div>\r\n\r\n  <div class=\"container\">\r\n    <div class=\"columns\">\r\n      <div class=\"column col-8 col-sm-12 lg-list\">\r\n        <div *ngFor=\"let entry of (mainboardGrouped$ | async) | keyvalue: groupingOrder\">\r\n          <h5 class=\"card-type-title\">\r\n            {{entry.key}}\r\n            <span>({{entry.value.length}})</span>\r\n          </h5>\r\n          <details *ngFor=\"let card of entry.value\" class=\"accordion\">\r\n            <ng-container *ngTemplateOutlet=\"cardDetail; context: { card: card }\"></ng-container>\r\n          </details>\r\n        </div>\r\n      </div>\r\n      <div class=\"column col-4 col-sm-12\">\r\n        <h5 class=\"card-type-title\">\r\n          sideboard\r\n          <span>({{(sideboard$ | async)?.length}})</span>\r\n        </h5>\r\n        <details *ngFor=\"let card of (sideboard$ | async)\" class=\"accordion\">\r\n          <ng-container *ngTemplateOutlet=\"cardDetail; context: { card: card }\"></ng-container>\r\n        </details>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<ng-template #cardDetail let-card=\"card\">\r\n  <summary class=\"accordion-header\">\r\n    <i class=\"icon icon-photo\"></i>\r\n    {{card.amount}}\r\n    <ng-container *ngIf=\"card.faces; else normal\">\r\n      <span>{{card.faces[0].name}}&nbsp;</span>\r\n      <ygm-mana [cost]=\"card.faces[0].manaCost\"></ygm-mana>\r\n    </ng-container>\r\n    <ng-template #normal>\r\n      <span>{{card.name}}&nbsp;</span>\r\n      <ygm-mana [cost]=\"card.manaCost\"></ygm-mana>\r\n    </ng-template>\r\n  </summary>\r\n  <div class=\"accordion-body\">\r\n    <ygm-card-tile [card]=\"card\"></ygm-card-tile>\r\n  </div>\r\n</ng-template>\r\n","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ygm-keyrune',\r\n  templateUrl: './keyrune.component.html',\r\n})\r\nexport class KeyruneComponent implements OnInit {\r\n  @Input() symbol: string;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  keyruneClasses(): string[][] { // TODO: compute on @Input setter\r\n    return [['ss', 'ss-'+this.symbol.toLowerCase()]];\r\n  }\r\n}\r\n","<span class=\"mana\">\r\n  <i *ngFor=\"let symbols of keyruneClasses()\" [ngClass]=\"symbols\"></i>\r\n</span>","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ygm-mana',\r\n  templateUrl: './mana.component.html',\r\n})\r\nexport class ManaComponent implements OnInit {\r\n  @Input() cost: string;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  manaClasses(): string[][] { // TODO: compute on @Input setter\r\n    if (!this.cost) {\r\n      return [[]];\r\n    }\r\n    return this.cost.split(/{(.*?)}/)\r\n      .filter(str => str.trim() !== '')\r\n      .map(token => token.toLowerCase().replace('/', ''))\r\n      .map(cost => ['ms', 'ms-cost', 'ms-' + cost]);\r\n  }\r\n}\r\n","<span class=\"mana\">\r\n  <i *ngFor=\"let symbols of manaClasses()\" [ngClass]=\"symbols\"></i>\r\n</span>\r\n\r\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'ygm-spinner-card',\n  templateUrl: './spinner-card.component.html',\n})\nexport class SpinnerCardComponent implements OnInit {\n  @Input() card: Observable<string>;\n  spinnerCard: string;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.spinnerCard = this.randomSpinner();\n  }\n\n  private randomSpinner() {\n    const spinners = [\"angel\", \"embalmed\", \"exerted\", \"goat\", \"knight ally\", \"soldier\", \"squirrel\", \"thopter\", \"angel\"];\n    return \"assets/tokens/\" + spinners[Math.floor(Math.random()*spinners.length)] + \".gif\";\n  }\n\n}\n","<div *ngIf=\"(card | async) as card\">\r\n  <!--<img src=\"http://gatherer.wizards.com/Handlers/Image.ashx?multiverseid=409619&amp;type=card\" />-->\r\n  <img class=\"mtg-card\" src=\"{{card}}\" />\r\n</div>\r\n<div *ngIf=\"!(card | async)\">\r\n  <img class=\"mtg-card\" src=\"{{spinnerCard}}\" />\r\n</div>\r\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { Item } from '../item';\r\n\r\n@Component({\r\n  selector: 'ygm-dropdown',\r\n  templateUrl: './dropdown.component.html',\r\n})\r\nexport class DropdownComponent implements OnInit {\r\n\r\n  @Input() initialValue: Item;\r\n  @Input() selectValues: Item[];\r\n  @Output() valueChange = new EventEmitter();\r\n  active: Item;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    this.select(this.initialValue);\r\n  }\r\n\r\n  select(evt: Item): void {\r\n    this.active = evt;\r\n    this.onValueChanged();\r\n  }\r\n\r\n  onValueChanged(): void {\r\n    this.valueChange.emit(this.active.value);\r\n  }\r\n\r\n}\r\n","<div class=\"dropdown\">\r\n\t<div class=\"btn-group\">\r\n\t\t<a class=\"btn btn-primary dropdown-toggle\" tabindex=\"0\">\r\n\t\t\t{{active?.label}} <i class=\"icon icon-caret\"></i>\r\n\t\t</a>\r\n\t\t<ul class=\"menu\">\r\n\t\t\t<li class=\"menu-item\" *ngFor=\"let item of selectValues\">\r\n\t\t\t\t<a [routerLink]=\"\" (click)=\"select(item)\">{{item.label}}</a>\r\n\t\t\t</li>\r\n\t\t</ul>\r\n\t</div>\r\n</div>\r\n","import { Component, OnInit, EventEmitter, Output, Input } from '@angular/core';\r\nimport { Item } from '../item';\r\n\r\n@Component({\r\n  selector: 'ygm-toggle',\r\n  templateUrl: './toggle.component.html',\r\n})\r\nexport class ToggleComponent implements OnInit {\r\n\r\n  @Input() values: Item[];\r\n  @Input() initialValue: Item;\r\n  @Output() valueChange = new EventEmitter();\r\n  active: Item;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    this.active = this.initialValue;\r\n    this.onValueChanged();\r\n  }\r\n\r\n  onValueChanged(): void {\r\n    this.valueChange.emit(this.active.value);\r\n  }\r\n\r\n  toggle(): void {\r\n    this.active = (this.active === this.values[0] ? this.values[1] : this.values[0]);\r\n    this.onValueChanged();\r\n  }\r\n\r\n  selectedClass(selectedItem: Item): string[] {\r\n    return selectedItem.value === this.active.value ? ['btn-primary'] : [];\r\n  }\r\n\r\n}\r\n","<div class=\"btn-group btn-group-block\">\r\n\t<button *ngFor=\"let item of values\" \r\n\t\tclass=\"btn btn-sm\" \r\n\t\t(click)=\"toggle()\" \r\n\t\t[ngClass]=\"selectedClass(item)\">\r\n\t\t{{item.label}}\r\n\t</button>\r\n</div>","'use strict';\r\n\r\nexport const DEBUG = true;\r\nexport const LOG_LEVEL = 'debug';\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ygm-default-layout',\r\n  templateUrl: './default-layout.component.html',\r\n})\r\nexport class DefaultLayoutComponent implements OnInit {\r\n  title: string;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"layout\">\r\n  <header>\r\n    <!--<ygm-navigation></ygm-navigation>-->\r\n\t\t<h1>Yawgmoth</h1>\r\n    <ygm-pull-out-menu></ygm-pull-out-menu>\r\n\t</header>\r\n  <div class=\"container app-content\">\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n  <footer>\r\n    <p>Coded by <a>PH</a></p>\r\n  </footer>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ygm-navigation',\r\n  templateUrl: './navigation.component.html',\r\n})\r\nexport class NavigationComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<nav class=\"navbar fixed shadow\">\r\n\t<section class=\"navbar-section logo-section\">\r\n\t\t<span class=\"logo\">\r\n\t\t\t<span class=\"dot w\"></span>\r\n\t\t\t<span class=\"dot u\"></span>\r\n\t\t\t<span class=\"dot b\"></span>\r\n\t\t\t<span class=\"dot r\"></span>\r\n\t\t\t<span class=\"dot g\"></span>\r\n\t\t\t</span>\r\n\t\t<h1>Yawgmoth</h1>\r\n\t</section>\r\n\t<section class=\"navbar-section link-section\">\r\n\t\t<a class=\"btn btn-link\" [routerLink]=\"['/decks']\">My decks</a>\r\n\t\t<a class=\"btn btn-link\" [routerLink]=\"['/collection']\">Collection</a>\r\n\t\t<a class=\"btn btn-link\" [routerLink]=\"['/wishlist']\">Wishlist</a>\r\n\t\t<a class=\"btn btn-link\" [routerLink]=\"['/settings']\"><i class=\"icon icon-people\"></i></a>\r\n\t\t<!--<a class=\"btn btn-link\" [routerLink]=\"['/meta']\">Meta</a>-->\r\n\t</section>\r\n</nav>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ygm-pull-out-menu',\r\n  templateUrl: './pull-out-menu.component.html',\r\n  styleUrls: ['./pull-out-menu.component.css']\r\n})\r\nexport class PullOutMenuComponent implements OnInit {\r\n\r\n  status: boolean = false;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  toggleMenu(){\r\n      this.status = !this.status;\r\n  }\r\n}\r\n","<!--\r\n\tpull-out menu by: https://stephaniewalter.design\r\n\tsource: https://codepen.io/GeoffreyCrofte/pen/ajKVRq\r\n\r\n-->\r\n<div class=\"device\">\r\n\t<div class=\"container\">\r\n\t\t<button id=\"burger\" class=\"open-main-nav\" \r\n\t\t\t(click)=\"toggleMenu()\"\r\n\t\t\t[ngClass]=\"status ? 'is-open' : ''\">\r\n\t\t\t<span class=\"burger\"></span>\r\n\t\t\t<span class=\"burger-text\">Menu</span>\r\n\t\t</button>\r\n\t\t<nav class=\"main-nav\" id=\"main-nav\" [ngClass]=\"status ? 'is-open' : ''\" (click)=\"toggleMenu()\">\r\n\t\t\t<ul>\r\n\t\t\t\t<li><a [routerLink]=\"['/decks']\" (click)=\"toggleMenu()\">My decks</a></li>\r\n\t\t\t\t<li><a [routerLink]=\"['/collection']\" (click)=\"toggleMenu()\">Collection</a></li>\r\n\t\t\t\t<li><a [routerLink]=\"['/wishlist']\" (click)=\"toggleMenu()\">Wishlist</a></li>\r\n\t\t\t\t<li><a [routerLink]=\"['/import']\" (click)=\"toggleMenu()\">Import</a></li>\r\n\t\t\t\t<!--\r\n\t\t\t\t\t<li><a [routerLink]=\"['/settings']\" (click)=\"toggleMenu()\">Settings<i class=\"icon icon-people\"></i></a></li>\r\n\t\t\t\t\t<li><a [routerLink]=\"['/meta']\">Meta</a></li>\r\n\t\t\t\t-->\r\n\t\t\t</ul>\r\n\t\t</nav>\r\n\t</div>\r\n</div>\r\n","import { Subject } from 'rxjs';\r\n\r\nexport const CARD_TYPES = ['land', 'instant', 'sorcery', 'enchantment', 'creature', 'planeswalker', 'artifact'];\r\n\r\nexport interface CardFace {\r\n  name: string;\r\n  typeLine: string;\r\n  types: string[]\r\n  oracleText?: string;\r\n  flavorText?: string;\r\n  manaCost?: string;\r\n  imgUrl?: string;\r\n}\r\n\r\nexport interface Card {\r\n  name: string;\r\n  typeLine?: string;\r\n  types?: string[]\r\n  oracleText?: string;\r\n  flavorText?: string;\r\n  externalId?: string;\r\n  cmc?: number;\r\n  manaCost?: string;\r\n  imgUrl?: string;\r\n  imgArtUrl?: string;\r\n  rarity?: string;\r\n  layout?: string;\r\n  faces?: CardFace[]\r\n  /*ui */\r\n  sideboard?: boolean;\r\n  amount?: number;\r\n  showDetails$?: Subject<boolean>;\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Observable, combineLatest } from 'rxjs';\r\nimport { CollectionService } from 'src/app/services/collection.service';\r\nimport { Collectible } from 'src/app/model/collectible';\r\n\r\n@Component({\r\n  selector: 'ygm-collection',\r\n  templateUrl: './collection.component.html',\r\n})\r\nexport class CollectionComponent implements OnInit {\r\n  collection$: Observable<Collectible[]>;\r\n\r\n  constructor(private collectionService: CollectionService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.collection$ = this.collectionService.getCollection();\r\n  }\r\n}\r\n","<ygm-card-table [cards$]=\"collection$\"></ygm-card-table>","import { Component, OnInit } from '@angular/core';\r\nimport { DeckService } from 'src/app/services/deck.service';\r\nimport { Observable, combineLatest, Subject, zip, BehaviorSubject } from 'rxjs';\r\nimport { map, tap, flatMap, defaultIfEmpty } from 'rxjs/operators';\r\nimport { Card } from 'src/app/model/card';\r\nimport { CompareService, Diff } from 'src/app/services/compare.service';\r\nimport { CollectionService } from 'src/app/services/collection.service';\r\nimport { Item } from 'src/app/core/item';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'ygm-compare',\r\n  templateUrl: './compare.component.html',\r\n  styleUrls: ['./compare.component.css']\r\n})\r\nexport class CompareComponent implements OnInit {\r\n\r\n  sources$: Observable<Item[]>;\r\n  source$: Observable<Card[]>;\r\n  difference$: Observable<Diff[]>;\r\n  selectedSource$: Subject<string>;\r\n\r\n  constructor(\r\n    private deckService: DeckService,\r\n    private collectionService: CollectionService,\r\n    private compareService: CompareService,\r\n    private route: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    const deckId = this.route.parent.snapshot.url[1].path;\r\n    if (deckId) {\r\n      console.log(deckId);\r\n    }\r\n    this.selectedSource$ = new Subject();\r\n\r\n    this.sources$ = this.deckService.listAll().pipe(\r\n      map(decks => decks.map(deck => ({ value: deck.id, label: deck.id.split('_').join('/') }))),\r\n    );\r\n    this.source$ = this.selectedSource$.pipe(\r\n      defaultIfEmpty(deckId),\r\n      map(next => this.deckService.getDeckById(next)),\r\n      flatMap(deck$ => deck$.pipe(\r\n        map(deck => deck.cards.concat(deck.sideboard)),\r\n        map(cards => cards.filter(card => card != null)),\r\n      )),\r\n    );\r\n    this.difference$ = combineLatest([\r\n      this.source$,\r\n      this.collectionService.getCollection()\r\n    ]).pipe(\r\n      map(([cards, collection]) => this.compareService.diff(cards, collection)),\r\n    );\r\n  }\r\n\r\n}\r\n","<div class=\"columns\">\r\n\t<div class=\"column col-6\">\r\n\t\t<ygm-dropdown \r\n\t\t\t[initialValue]=\"{ value: 'source', label: 'Select' }\"\r\n\t\t\t[selectValues]=\"(sources$ | async)\"\r\n\t\t\t(valueChange)=\"selectedSource$.next($event)\">\r\n\t\t</ygm-dropdown>\r\n\t</div>\r\n\t<div class=\"column col-6\">\r\n\t\t\r\n\t</div>\r\n</div>\r\n<div class=\"spacer\"></div>\r\n\r\n<div class=\"container\">\r\n\t<div class=\"columns\">\r\n\t\t<div class=\"column col-6\" *ngIf=\"source$ | async as cards; else empty\">\r\n\t\t\t<div *ngFor=\"let card of cards\">\r\n\t\t\t\t<ygm-card-pill [card]=\"card\"></ygm-card-pill>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div class=\"column col-6\" *ngIf=\"difference$ | async as compare\">\r\n\t\t\t<ng-container *ngFor=\"let card of compare\">\r\n\t\t\t\t<div [ngClass]=\"(card.owned - card.required < 0) ? 'negative' : 'positive'\">\r\n\t\t\t\t\t{{(card.owned - card.required < 0) ? card.owned - card.required : card.owned}} {{card.name}} \r\n\t\t\t\t</div>\r\n\t\t\t</ng-container>\r\n\t\t</div>\r\n\t</div>\r\n\t<ng-template #empty>\r\n\t\t<div class=\"empty column col-12\">\r\n\t\t\t<div class=\"empty-icon\">\r\n\t\t\t\t<i class=\"icon icon-copy\"></i>\r\n\t\t\t</div>\r\n\t\t\t<p class=\"empty-title h5\">No deck selected</p>\r\n\t\t\t<p class=\"empty-subtitle\">Select a deck to compare with your collection.</p>\r\n\t\t</div>\r\n\t</ng-template>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { DeckMeta } from '../../model/deck';\r\nimport { DeckService } from '../../services/deck.service';\r\nimport { SettingsService } from 'src/app/services/settings.service';\r\n\r\n@Component({\r\n  selector: 'ygm-deck-list',\r\n  templateUrl: './deck-list.component.html',\r\n})\r\nexport class DeckListComponent implements OnInit {\r\n  selectedView: string;\r\n  meta$: Observable<DeckMeta[]>;\r\n\r\n  constructor(\r\n    private settingsService: SettingsService,\r\n    private deckService: DeckService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.selectedView = this.settingsService.load().selectedViewMode;\r\n    this.meta$ = this.deckService.listAllDecks();\r\n  }\r\n\r\n  toggleView(evt: any): void {\r\n    this.selectedView = evt;\r\n  }\r\n}\r\n","<ng-container [ngSwitch]=\"selectedView\">\r\n  <ng-container *ngSwitchDefault>\r\n    <div class=\"columns deck-tile-view\">\r\n      <div *ngFor=\"let meta of (meta$ | async)\" class=\"column col-6 col-sm-12\">\r\n        <ygm-deck-tile [meta]=\"meta\"></ygm-deck-tile>\r\n      </div>\r\n    </div>\r\n  </ng-container>\r\n  <ng-container *ngSwitchCase=\"'cardView'\">\r\n    <div class=\"columns deck-card-view\">\r\n      <div *ngFor=\"let meta of (meta$ | async)\" class=\"column col-4 col-sm-12\">\r\n        <ygm-deck-card [meta]=\"meta\"></ygm-deck-card>\r\n      </div>\r\n    </div>\r\n  </ng-container>\r\n</ng-container>","import { Component, OnInit } from '@angular/core';\nimport { DeckInfo, Deck } from 'src/app/model/deck';\nimport { DeckService } from 'src/app/services/deck.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'ygm-import',\n  templateUrl: './import.component.html',\n  styleUrls: ['./import.component.css']\n})\nexport class ImportComponent implements OnInit {\n  deck: DeckInfo;\n  preview$: Observable<Deck>;\n\n  constructor(private deckService: DeckService) {\n  }\n\n  ngOnInit(): void {\n    this.deck = {\n      name: '',\n      format: 'standard',\n      preview: 'counterspell',\n      cards: '1 counterspell\\n3 Sakura-Tribe Elder\\n4 Eternal Witness\\n2 Thing in the Ice'\n    };\n  }\n\n  preview() {\n    this.preview$ = this.deckService.preview(this.deck);\n  }\n}\n","<div class=\"container grid-lg\">\n    <div class=\"columns\">\n        <div class=\"column col-4\">\n            <form>\n                <div class=\"form-group\">\n                    <label class=\"form-label\" for=\"input-1\">deck title</label>\n                    <input class=\"form-input\" type=\"text\" [(ngModel)]=\"deck.name\" name=\"name\" />\n                </div>\n                <div class=\"form-group\">\n                    <label class=\"form-label\" for=\"input-1\">deck format</label>\n                    <input class=\"form-input\" type=\"text\" [(ngModel)]=\"deck.format\" name=\"format\" />\n                </div>\n                <div class=\"form-group\">\n                    <label class=\"form-label\" for=\"input-1\">preview card</label>\n                    <input class=\"form-input\" type=\"text\" [(ngModel)]=\"deck.preview\" name=\"preview\" />\n                </div>\n                <div class=\"form-group\">\n                    <label class=\"form-label\" for=\"input-1\">cards</label>\n                    <textarea  class=\"form-input\" [(ngModel)]=\"deck.cards\" name=\"cards\" rows=\"10\"></textarea>\n                </div>\n                <div class=\"form-group\">\n                    <button class=\"btn\" (click)=\"preview()\">preview</button>\n                    <!--\n                    &nbsp;\n                    <button class=\"btn btn-primary\">save</button>\n                    -->\n                </div>\n            </form>\n        </div>\n        <div class=\"column col-8\">\n            <div *ngIf=\"preview$ | async as deck; else empty\">\n                <div *ngFor=\"let card of deck.cards\">\n                    <ygm-card-pill [card]=\"card\"></ygm-card-pill>\n                </div>\n            </div>\n            <ng-template #empty>\n                <div class=\"empty\">\n                    <div class=\"empty-icon\">\n                        <i class=\"icon icon-copy\"></i>\n                    </div>\n                    <p class=\"empty-title h5\">No deck selected</p>\n                    <p class=\"empty-subtitle\">Select a deck to compare with your collection.</p>\n                </div>\n            </ng-template>\n        </div>\n    </div>\n    \n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ygm-meta-list',\r\n  templateUrl: './meta-list.component.html',\r\n})\r\nexport class MetaListComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>meta-list works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { SettingsService } from 'src/app/services/settings.service';\r\nimport { Settings } from 'src/app/model/settings';\r\n\r\n@Component({\r\n  selector: 'ygm-settings',\r\n  templateUrl: './settings.component.html',\r\n})\r\nexport class SettingsComponent implements OnInit {\r\n  settings: Settings;\r\n\r\n  constructor(private settingsService: SettingsService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.settings = this.settingsService.load();\r\n  }\r\n\r\n  onSave(): void {\r\n    this.settingsService.save(this.settings);\r\n  }\r\n\r\n  onViewModeChange(evt: any): void {\r\n    console.log(evt);\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"columns\">\r\n    <div class=\"column col-3 col-md-12\">\r\n        <ul class=\"menu\">\r\n            <li class=\"divider\" data-content=\"Settings\"></li>\r\n            <li class=\"menu-item\">\r\n                <a href=\"#\">\r\n                Display\r\n                </a>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n    <div class=\"column col-8 col-md-12\">\r\n        <section>\r\n            <h3 class=\"card-title h5\">Deck list display</h3>\r\n            <p>You can select to display your deck listings in tile mode or card mode.</p>\r\n            <label class=\"form-radio\" *ngFor=\"let viewMode of settings.viewModes\">\r\n                <input type=\"radio\" [ngModel]=\"settings.selectedViewMode\" \r\n                    (ngModelChange)=\"onViewModeChange($event)\" \r\n                    name=\"selectedViewMode\" \r\n                    value=\"{{viewMode.value}}\" />\r\n                <i class=\"form-icon\"></i> {{viewMode.label}}\r\n            </label>     \r\n        </section>\r\n        <section>\r\n            <button class=\"btn btn-primary\" (click)=\"onSave()\">Save</button>\r\n        </section>\r\n        <!--\r\n        <h2>Connectors</h2>\r\n        <section class=\"card\" *ngFor=\"let connector of settings.connectors\">\r\n            <div class=\"card-header\">\r\n                <h3 class=\"card-title h5\">{{connector.connectorName}}</h3>\r\n                <p>{{connector.connectorDescription}}</p>\r\n            </div>\r\n            <form class=\"card-body\">\r\n                <div class=\"form-group\">\r\n                    <label class=\"form-label\" for=\"input-1\">dbuser</label>\r\n                    <input class=\"form-input\" type=\"text\" [(ngModel)]=\"connector.dbuser\" name=\"dbuser\">\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label class=\"form-label\" for=\"input-2\">dbpassword</label>\r\n                    <input class=\"form-input\" type=\"text\" [(ngModel)]=\"connector.dbpassword\" name=\"dbpassword\">\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label class=\"form-label\" for=\"input-3\">dbhost</label>\r\n                    <input class=\"form-input\" type=\"text\" [(ngModel)]=\"connector.dbhost\" name=\"dbhost\">\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label class=\"form-label\" for=\"input-4\">database</label>\r\n                    <input class=\"form-input\" type=\"text\" [(ngModel)]=\"connector.database\" name=\"database\">\r\n                </div>\r\n                <button class=\"btn\">test</button>\r\n                &nbsp;\r\n                <button class=\"btn btn-success\">save</button>\r\n            </form>\r\n        </section>\r\n        -->\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { DeckMeta } from 'src/app/model/deck';\r\nimport { DeckService } from 'src/app/services/deck.service';\r\nimport { Collectible } from 'src/app/model/collectible';\r\nimport { CollectionService } from 'src/app/services/collection.service';\r\n\r\n@Component({\r\n  selector: 'ygm-wish-list',\r\n  templateUrl: './wish-list.component.html',\r\n})\r\nexport class WishListComponent implements OnInit {\r\n\r\n  meta$: Observable<DeckMeta[]>;\r\n  wishCards$: Observable<Collectible[]>;\r\n\r\n  constructor(\r\n    private deckService: DeckService,\r\n    private collectionService: CollectionService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.meta$ = this.deckService.listAllWishDecks();\r\n    this.wishCards$ = this.collectionService.getWishCards();\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"container grid-lg\">\r\n  <h2>Decks</h2>\r\n  <div class=\"container\">\r\n    <div class=\"columns deck-tile-view\">\r\n      <div *ngFor=\"let meta of (meta$ | async)\" class=\"column col-6 col-sm-12\">\r\n        <ygm-deck-tile [meta]=\"meta\"></ygm-deck-tile>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <h2>Cards</h2>\r\n  <div class=\"container\">\r\n    <ygm-card-table [cards$]=\"wishCards$\" [searchable]=\"false\"></ygm-card-table>\r\n  </div>\r\n  \r\n</div>\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\nimport { Collectible } from '../model/collectible';\r\nimport { CsvService } from './csv.service';\r\nimport { flatMap } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CollectionService {\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private csvService: CsvService) { }\r\n\r\n  getCollection(): Observable<Collectible[]> {\r\n    return this.http.get('assets/purchases.csv', { responseType: 'text'}).pipe(\r\n      flatMap(csv => of(this.csvService.parse(csv) as Collectible[]))\r\n    );\r\n  }\r\n\r\n  getWishCards(): Observable<Collectible[]> {\r\n    return this.http.get('assets/wishcards.csv', { responseType: 'text'}).pipe(\r\n      flatMap(csv => of(this.csvService.parse(csv) as Collectible[]))\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Card } from '../model/card';\r\nimport { Collectible } from '../model/collectible';\r\n\r\nexport interface Diff {\r\n  name?: string;\r\n  owned?: number;\r\n  required?: number;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CompareService {\r\n\r\n  constructor() { }\r\n\r\n  diff(cards: Card[], collection: Collectible[]): Diff[] {\r\n    // console.log(cards);\r\n    return (cards || []).reduce((acc, card) => {\r\n      const inCollection = this.findAllMatchingCards(card.name, collection);\r\n      // console.log(inCollection);\r\n      if (!inCollection) {\r\n        acc.push({\r\n          name: card.name,\r\n          owned: 0,\r\n          required: card.amount,\r\n        });\r\n      } else {\r\n        acc.push({\r\n          name: card.name,\r\n          owned: inCollection.quantity,\r\n          required: card.amount,\r\n        });\r\n      }\r\n      return acc;\r\n    }, []);\r\n  }\r\n\r\n  private findAllMatchingCards(cardName: string, collection: Collectible[]): {name: string, quantity: number} {\r\n    return collection\r\n        .filter(elt => elt.cardName === cardName)\r\n        .reduce((withAmount: {name: string, quantity: number}, item: Collectible) => {\r\n          withAmount.quantity += item.quantity;\r\n          return withAmount;\r\n        }, {name: cardName, quantity: 0});\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CsvService {\r\n  sperator: RegExp = /;/;///\\t/;\r\n\r\n  constructor() { }\r\n\r\n  parse(csv: string): any[] {\r\n    const csvFull = csv.split(/\\r\\n|\\n/);\r\n    const csvHeader = csvFull[0].split(this.sperator);\r\n    const csvData = csvFull.splice(1);\r\n\r\n    return csvData.filter(row => '' !== row).reduce((acc, row) => {\r\n      const cells = row.split(this.sperator);\r\n      const obj = {};\r\n      csvHeader.forEach((el, i) => {\r\n        obj[el] = cells[i];\r\n      });\r\n      acc.push(obj);\r\n      return acc;\r\n    }, []);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, forkJoin, of, merge, combineLatest } from 'rxjs';\r\nimport { flatMap, map, find, shareReplay } from 'rxjs/operators';\r\nimport { MtgService } from './mtg.service';\r\nimport { Deck, DeckMeta, DeckInfo } from '../model/deck';\r\nimport { Card } from '../model/card';\r\nimport { CsvService } from './csv.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DeckService {\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private mtgService: MtgService,\r\n    private csvService: CsvService) { }\r\n\r\n  public listAll(): Observable<DeckMeta[]> {\r\n    return combineLatest([\r\n      this.listAllDecks(),\r\n      this.listAllWishDecks(),\r\n    ]).pipe(\r\n      map(([owned, wished]) => owned.concat(wished)),\r\n    );\r\n  }\r\n\r\n  public listAllDecks(): Observable<DeckMeta[]> {\r\n    return this.getCsv('assets/decks.csv').pipe(\r\n      flatMap(csv => of(this.csvService.parse(csv) as DeckMeta[])),\r\n      shareReplay(1),\r\n    );\r\n  }\r\n\r\n  public listAllWishDecks(): Observable<DeckMeta[]> {\r\n    return this.getCsv('assets/wishdecks.csv').pipe(\r\n      flatMap(csv => of(this.csvService.parse(csv) as DeckMeta[])),\r\n      shareReplay(1),\r\n    );\r\n  }\r\n\r\n  public findMetadataById(deckId: string): Observable<DeckMeta> {\r\n    return merge(this.listAllDecks(), this.listAllWishDecks()).pipe(\r\n      flatMap(meta => meta),\r\n      find(meta => meta.id === deckId)\r\n    );\r\n  }\r\n\r\n  public preview(deckInfo: DeckInfo): Observable<Deck> {\r\n    return of(deckInfo).pipe(\r\n      map(d => d.cards),\r\n      map(deckTxt => this.parseDeckText(deckTxt)),\r\n      flatMap(o => o),\r\n      map(cards => ({name: deckInfo.name, cards: cards})),\r\n    );\r\n  }\r\n\r\n  public getDeckById(deckId: string): Observable<Deck> {\r\n    const deckPath = deckId.split('_').join('/');\r\n    return this.http.get(`assets/decks/${deckPath}.txt`, { responseType: 'text' as 'json'}).pipe(\r\n      map((deckTxt: string) => this.parseDeckText(deckTxt)),\r\n      flatMap(o => o),\r\n      map(cards => ({name: deckId, cards: cards})),\r\n    );\r\n  }\r\n\r\n  private parseDeckText(deckTxt: string): Observable<Card[]> {\r\n    let currentSection = 'mainboard';\r\n    const cards$ = deckTxt.split(/\\r?\\n/)\r\n        .filter(str => str && str.length > 0)\r\n        .map(line => {\r\n          const partial = this.parseCardLine(line, currentSection);\r\n          if (partial.section !== currentSection) {\r\n            currentSection = partial.section;\r\n          }\r\n          return partial;\r\n        })\r\n        .filter(partial => partial.name !== null)\r\n        .map(partial => this.getCard(partial)); // [Observable<Card>]\r\n    return forkJoin(cards$); // Observable<Card[]>\r\n  }\r\n\r\n  private getCard(partial: {name: string, amount: number, section: string}): Observable<Card> {\r\n    return this.mtgService.getCardByName(partial.name).pipe(\r\n      map(card => ({...card, amount: partial.amount, sideboard: partial.section.toLowerCase() === 'sideboard'}))\r\n    );\r\n  }\r\n\r\n  private parseCardLine(cardLine: string, sectionName: string): {name: string, amount: number, section: string} {\r\n    const tokens = cardLine.split(' ');\r\n    if (tokens[0] === '#') {\r\n      return { name: null, amount: null, section: tokens[1] };\r\n    } else {\r\n      return { name: tokens.slice(1).join(' '), amount: Number(tokens[0]), section: sectionName };\r\n    }\r\n  }\r\n\r\n  private getCsv(path: string): Observable<string> {\r\n    return this.http.get(path, { responseType: 'text'});\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { LOG_LEVEL } from '../env';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoggerService {\r\n\r\n  constructor() { }\r\n\r\n  debug(message:any, ...dispVars: any[]) {\r\n    if (LOG_LEVEL === 'debug') {\r\n      // this.eLog((typeof message) === 'string' ? message : JSON.stringify(message), dispVars);\r\n      console.log(message);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * eLog - displays calling line number & message & dumps vars as pretty json string\r\n   * @param {string} msg - string to display in log message\r\n   * @param {any} dispVars - any number of variables (ellipsis , aka Rest parameters) to dump\r\n   * {@link https://github.com/evanw/node-source-map-support usable by typescript node-source-map-support module}\r\n   * {@link https://github.com/mozilla/source-map/ Mozilla source-map library & project}\r\n   * {@link http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/ good introduction to sourcemaps}\r\n   */\r\n  eLog(msg:string,...dispVars:any[]) {\r\n    /**\r\n     * go one line back for the caller\r\n     * @type {string}\r\n     */\r\n    let stackLine = (new Error).stack.split(\"\\n\")[2];\r\n    /**\r\n     * retrieve the file basename & positional data, after the last `/` to the `)` \r\n     */\r\n    // \r\n    let caller_line = stackLine.slice(stackLine.lastIndexOf('/'),stackLine.lastIndexOf(')'))\r\n    /**\r\n     *  test for no `/` ; if there is no `/` then use filename without a prefixed path\r\n     */ \r\n    if ( caller_line.length == 0 ) {\r\n      caller_line = stackLine.slice(stackLine.lastIndexOf('('),stackLine.lastIndexOf(')'))\r\n    }\r\n    // \r\n    /**\r\n     * filename_base - parse out the file basename; remove first `/` char and go to `:`\r\n     */\r\n    let filename_base = caller_line.slice(0+1,caller_line.indexOf(':'));\r\n    /**\r\n     * line_no - parse out the line number ; remove first `:` char and go to 2nd `:`\r\n     */\r\n    let line_no = caller_line.slice(caller_line.indexOf(':')+1,caller_line.lastIndexOf(':'));\r\n    /**\r\n     * line_pos - line positional - from the last `:` to the end of the string\r\n     */\r\n    let line_pos = caller_line.slice(caller_line.lastIndexOf(':')+1);\r\n    console.log(`eLog called by ${filename_base} on line# ${line_no} @ char# ${line_pos} said:\\n${msg}`);\r\n    // print out the input variables as pretty JSON strings\r\n    dispVars.forEach(value => {\r\n      console.log(JSON.stringify(value,null,2));\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map, tap, catchError, shareReplay } from 'rxjs/operators';\r\nimport { Card, CARD_TYPES, CardFace } from '../model/card';\r\nimport { LoggerService } from './logger.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MtgService {\r\n\r\n  constructor(\r\n    private log: LoggerService,\r\n    private http: HttpClient) { }\r\n\r\n  public getCardByName(cardName: string): Observable<Card> {\r\n    return this.http.get(`https://api.scryfall.com/cards/named?exact=${cardName}`).pipe(\r\n      tap(mtgCard => this.log.debug(mtgCard, this)),\r\n      map(mtgCard => this.toCard(mtgCard)),\r\n      shareReplay(1),\r\n      catchError((error) => {\r\n        // TODO: handle display of erroneous card\r\n        console.error(error);\r\n        return of({name: cardName, amount: 0, types: []} as Card);\r\n      }),\r\n    );\r\n  }\r\n\r\n  private toCard(mtgCard: any): Card {\r\n    const card = {\r\n      externalId: mtgCard['id'],\r\n      name: mtgCard['name'],\r\n      typeLine: mtgCard['type_line'],\r\n      //TODO: superTypes, subTypes\r\n      types: this.parseTypeLine(mtgCard['type_line']),\r\n      oracleText: mtgCard['oracle_text'],\r\n      flavorText: mtgCard['flavor_text'],\r\n      cmc: mtgCard['cmc'],\r\n      manaCost: mtgCard['mana_cost'],\r\n      rarity: mtgCard['rarity'],\r\n      layout: mtgCard['layout'],\r\n      amount: 1,\r\n    } as Card;\r\n    if (mtgCard['card_faces']) {\r\n      card.faces = [\r\n        this.toCardFace(mtgCard['card_faces'][0]),\r\n        this.toCardFace(mtgCard['card_faces'][1]),\r\n      ];\r\n    }\r\n    if (mtgCard['image_uris']) {\r\n      //small, normal, large, png, art_crop, border_crop\r\n      card.imgUrl = mtgCard['image_uris']['normal'];\r\n      card.imgArtUrl = mtgCard['image_uris']['art_crop'];\r\n    }\r\n    return card;\r\n  }\r\n\r\n  private toCardFace(mtgCardFace: any): CardFace {\r\n    const cardFace: CardFace = {\r\n      name: mtgCardFace['name'],\r\n      typeLine: mtgCardFace['type_line'],\r\n      types: this.parseTypeLine(mtgCardFace['type_line']),\r\n      oracleText: mtgCardFace['oracle_text'],\r\n      flavorText: mtgCardFace['flavor_text'],\r\n      manaCost: mtgCardFace['mana_cost'],\r\n    };\r\n\r\n    if (mtgCardFace['image_uris']) {\r\n      cardFace.imgUrl = mtgCardFace['image_uris']['normal'];\r\n    }\r\n    return cardFace;\r\n  }\r\n\r\n  private parseTypeLine(typeLine: string): string[] {\r\n    return typeLine.split(' ').reduce((acc, type) => {\r\n      const val = CARD_TYPES.find(elt => elt === type.toLowerCase());\r\n      if (val) { acc.push(val); }\r\n      return acc;\r\n    }, []);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { Settings } from '../model/settings';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SettingsService {\n  singleton: Settings;\n\n  constructor() {\n    this.singleton = {\n      viewModes: [{\n        value: 'cardView',\n        label: 'Card View',\n      },\n      {\n        value: 'tileView',\n        label: 'Tile View',\n      },\n      {\n        value: 'checkListView',\n        label: 'Checklist View',\n      }],\n      selectedViewMode: 'tileView',\n      connectors: [\n        {\n          connectorName: 'MonogoDB connector',\n          connectorDescription: 'Connect to a mongo database (your settings are kept in local storage)',\n          dbuser: '',\n          dbpassword: '',\n          dbhost: '',\n          database: ''\n        }\n      ]\n    };\n  }\n\n  load(): Settings {\n    return this.singleton;\n  }\n\n  save(settings: Settings): void {\n    this.singleton =  settings;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}